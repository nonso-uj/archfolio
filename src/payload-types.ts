/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    homePage: HomePage;
    aboutPage: AboutPage;
    work: Work;
    contactPage: ContactPage;
    media: Media;
    slug: Slug;
    users: User;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    homePage: HomePageSelect<false> | HomePageSelect<true>;
    aboutPage: AboutPageSelect<false> | AboutPageSelect<true>;
    work: WorkSelect<false> | WorkSelect<true>;
    contactPage: ContactPageSelect<false> | ContactPageSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    slug: SlugSelect<false> | SlugSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * Click on publish to save your changes and then click the eye icon to see your changes live right here!
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homePage".
 */
export interface HomePage {
  id: string;
  tenant?: (string | null) | Slug;
  heroImage?: (string | null) | Media;
  heroText?: string | null;
  aboutText?: string | null;
  /**
   * Pick as many as you want
   */
  skills?:
    | (
        | 'autocad'
        | 'revit'
        | 'sketchup'
        | 'rhino'
        | 'grasshopper'
        | 'archicad'
        | 'vectorworks'
        | '3dsmax'
        | 'lumion'
        | 'vray'
        | 'enscape'
        | 'twinmotion'
        | 'blender'
        | 'photoshop'
        | 'illustrator'
        | 'indesign'
        | 'navisworks'
        | 'formit'
        | 'sketchfab'
        | 'bim360'
      )[]
    | null;
  topWorks?:
    | {
        topWork: string | Work;
        id?: string | null;
      }[]
    | null;
  images?:
    | {
        image: string | Media;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "slug".
 */
export interface Slug {
  id: string;
  /**
   * Used for url paths, example: /sas-portfolio/slug
   */
  name: string;
  /**
   * If checked, logging in is not required to read. Useful for building public pages.
   */
  allowPublicRead?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Image size maximum 1mb
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  tenant?: (string | null) | Slug;
  alt?: string | null;
  /**
   * Cloudinary Media Information
   */
  cloudinary?: {
    /**
     * Cloudinary Public ID (used for transformations)
     */
    public_id?: string | null;
    /**
     * Type of the resource (image, video, raw)
     */
    resource_type?: string | null;
    /**
     * File format
     */
    format?: string | null;
    /**
     * Secure delivery URL
     */
    secure_url?: string | null;
    /**
     * File size in bytes
     */
    bytes?: number | null;
    /**
     * Creation timestamp
     */
    created_at?: string | null;
    /**
     * Current version number
     */
    version?: string | null;
    /**
     * Unique version identifier
     */
    version_id?: string | null;
    /**
     * Width in pixels
     */
    width?: number | null;
    /**
     * Height in pixels
     */
    height?: number | null;
    /**
     * Duration in seconds (for videos)
     */
    duration?: number | null;
    /**
     * Number of pages (for PDFs)
     */
    pages?: number | null;
    /**
     * Which page of the PDF to use for thumbnails (changes will apply after saving)
     */
    selected_page?: number | null;
    /**
     * URL for the thumbnail image (automatically generated for PDFs)
     */
    thumbnail_url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "work".
 */
export interface Work {
  id: string;
  tenant?: (string | null) | Slug;
  title: string;
  softwareUsed?:
    | (
        | 'autocad'
        | 'revit'
        | 'sketchup'
        | 'rhino'
        | 'grasshopper'
        | 'archicad'
        | 'vectorworks'
        | '3dsmax'
        | 'lumion'
        | 'vray'
        | 'enscape'
        | 'twinmotion'
        | 'blender'
        | 'photoshop'
        | 'illustrator'
        | 'indesign'
        | 'navisworks'
        | 'formit'
        | 'sketchfab'
        | 'bim360'
      )[]
    | null;
  role?: string | null;
  /**
   * Description about how the project was carried out.
   */
  details?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  images: {
    image: string | Media;
    id?: string | null;
  }[];
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * Click on publish to save your changes and then click the eye icon to see your changes live right here!
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "aboutPage".
 */
export interface AboutPage {
  id: string;
  tenant?: (string | null) | Slug;
  aboutImage?: (string | null) | Media;
  aboutText?: string | null;
  workingExperience?:
    | {
        role: string;
        startDate: string;
        endDate: string;
        id?: string | null;
      }[]
    | null;
  services?:
    | {
        service: string;
        id?: string | null;
      }[]
    | null;
  contact?:
    | {
        name: string;
        link: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * Click on publish to save your changes and then click the eye icon to see your changes live right here!
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contactPage".
 */
export interface ContactPage {
  id: string;
  tenant?: (string | null) | Slug;
  address?: string | null;
  phoneNumber?: string | null;
  email?: string | null;
  socials?:
    | {
        platform:
          | 'instagram'
          | 'linkedin'
          | 'pinterest'
          | 'behance'
          | 'facebook'
          | 'x'
          | 'youtube'
          | 'tiktok'
          | 'reddit';
        link: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  username?: string | null;
  fullName?: string | null;
  roles?: ('admin' | 'editor' | 'user')[] | null;
  tenants?:
    | {
        tenant: string | Slug;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'homePage';
        value: string | HomePage;
      } | null)
    | ({
        relationTo: 'aboutPage';
        value: string | AboutPage;
      } | null)
    | ({
        relationTo: 'work';
        value: string | Work;
      } | null)
    | ({
        relationTo: 'contactPage';
        value: string | ContactPage;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'slug';
        value: string | Slug;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homePage_select".
 */
export interface HomePageSelect<T extends boolean = true> {
  tenant?: T;
  heroImage?: T;
  heroText?: T;
  aboutText?: T;
  skills?: T;
  topWorks?:
    | T
    | {
        topWork?: T;
        id?: T;
      };
  images?:
    | T
    | {
        image?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "aboutPage_select".
 */
export interface AboutPageSelect<T extends boolean = true> {
  tenant?: T;
  aboutImage?: T;
  aboutText?: T;
  workingExperience?:
    | T
    | {
        role?: T;
        startDate?: T;
        endDate?: T;
        id?: T;
      };
  services?:
    | T
    | {
        service?: T;
        id?: T;
      };
  contact?:
    | T
    | {
        name?: T;
        link?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "work_select".
 */
export interface WorkSelect<T extends boolean = true> {
  tenant?: T;
  title?: T;
  softwareUsed?: T;
  role?: T;
  details?: T;
  images?:
    | T
    | {
        image?: T;
        id?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contactPage_select".
 */
export interface ContactPageSelect<T extends boolean = true> {
  tenant?: T;
  address?: T;
  phoneNumber?: T;
  email?: T;
  socials?:
    | T
    | {
        platform?: T;
        link?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  tenant?: T;
  alt?: T;
  cloudinary?:
    | T
    | {
        public_id?: T;
        resource_type?: T;
        format?: T;
        secure_url?: T;
        bytes?: T;
        created_at?: T;
        version?: T;
        version_id?: T;
        width?: T;
        height?: T;
        duration?: T;
        pages?: T;
        selected_page?: T;
        thumbnail_url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "slug_select".
 */
export interface SlugSelect<T extends boolean = true> {
  name?: T;
  allowPublicRead?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  username?: T;
  fullName?: T;
  roles?: T;
  tenants?:
    | T
    | {
        tenant?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: string | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}